<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Suggeritore_Cisco.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- ADXButton (Standard) -->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="RectangleFocus" Margin="-3" StrokeDashArray="4 4" Opacity="0" RadiusX="5" RadiusY="5" Fill="Transparent" Stroke="#99A2A2A2" StrokeThickness="1">
                        <Rectangle.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.5" To="1" Storyboard.TargetName="RectangleFocus" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Rectangle.Triggers>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ADXButton}" TargetType="{x:Type local:ADXButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#00779f"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ADXButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1250000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="TransformAnim">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.075" To="0.8" Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleX">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="0.8" BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleY">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="RestoreTransformAnim">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.075" To="1" Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleX">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.(TransformGroup.Children)[0].ScaleY">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5" x:Name="border">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="2" x:Name="border1">
                            <Grid>
                                <Border Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" Margin="1" Background="#7F2D2D2D"/>
                                <ContentPresenter VerticalAlignment="Center"  Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border1" Value="0.5"/>
                            <Setter Property="Opacity" TargetName="border" Value="1"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource TransformAnim}" x:Name="TransformAnim_BeginStoryboard" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource RestoreTransformAnim}" x:Name="RestoreTransformAnim_BeginStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowRect}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideRect}" />
                            </Trigger.ExitActions>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ADXRadioButton -->
    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent" Stroke="#99029cc7" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ADXRadioButton}" TargetType="{x:Type local:ADXRadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="BulletColor" Value="#026873" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisual}"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ADXRadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="1" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="HideMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="BuildMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="100" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(local:CircularProgressBar.Percentage)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="UnBuildMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(local:CircularProgressBar.Percentage)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="BiggerMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="1" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="1" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="SmallerMark">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0.5" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0.5" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="BuildExtern">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="1" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="100" Storyboard.TargetName="Border" Storyboard.TargetProperty="(local:CircularProgressBar.Percentage)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="UnBuildExtern">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.25" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(local:CircularProgressBar.Percentage)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Margin="0,0,0,0" Background="Transparent" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid Width="20" Height="20">
                                <Viewbox>
                                    <local:CircularProgressBar Percentage="100" SegmentColor="#999" StrokeThickness="1" Radius="10" x:Name="Circle" />
                                </Viewbox>
                                <Viewbox>
                                    <local:CircularProgressBar RenderTransformOrigin="0.5,0.5" Percentage="100" Opacity="0" SegmentColor="{TemplateBinding BulletColor}" StrokeThickness="1" Radius="10" x:Name="Border">
                                        <local:CircularProgressBar.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </local:CircularProgressBar.RenderTransform>
                                    </local:CircularProgressBar>
                                </Viewbox>
                                <Viewbox Margin="3">
                                    <local:CircularProgressBar RenderTransformOrigin="0.5,0.5" Percentage="0" SegmentColor="{TemplateBinding BulletColor}" StrokeThickness="20" Radius="10" x:Name="CheckMark">
                                        <local:CircularProgressBar.RenderTransform>
                                            <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                        </local:CircularProgressBar.RenderTransform>
                                    </local:CircularProgressBar>
                                </Viewbox>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--<StackPanel VerticalAlignment="Center" HorizontalAlignment="Left">-->
                        <ContentPresenter Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                        <!--<Rectangle Margin="6,0,0,0" Fill="{TemplateBinding BulletColor}" Stroke="{TemplateBinding BulletColor}" StrokeThickness="1" Height="1" HorizontalAlignment="Stretch" />
                        </StackPanel>-->
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource BuildMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource BiggerMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource BuildExtern}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource UnBuildMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource SmallerMark}"/>
                                <BeginStoryboard Storyboard="{StaticResource UnBuildExtern}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="Border" Property="SegmentColor" Value="{StaticResource DarkBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter TargetName="Border" Property="SegmentColor" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="StrokeThickness" Value="{StaticResource GlyphBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="Border" Property="SegmentColor" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="StrokeThickness" Value="#40000000" />
                            <Setter Property="Foreground" Value="#80000000"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ADXSlider -->
    <Style x:Key="SliderRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="Black" Background="#FF919191" Height="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemedThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="rect" Height="10"  Width="10" Fill="#25a581" RadiusY="2" RadiusX="2" Stroke="White" StrokeThickness="0.5"/>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DoRound">
                            <DoubleAnimation Duration="00:00:00.075" To="5" BeginTime="00:00:00" Storyboard.TargetName="rect" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="5" BeginTime="00:00:00" Storyboard.TargetName="rect" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="ExitRound">
                            <DoubleAnimation Duration="00:00:00.075" To="2" BeginTime="00:00:00" Storyboard.TargetName="rect" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="2" BeginTime="00:00:00" Storyboard.TargetName="rect" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DoRound}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExitRound}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border SnapsToDevicePixels="True" Background="#008d6a" Margin="0,0,0,0" Height="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:ADXSlider}" TargetType="{x:Type local:ADXSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ADXSlider}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="TransformAnim">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.075" To="2.5" Storyboard.TargetName="thumb" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.075" To="2.5" Storyboard.TargetName="thumb" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="RestoreTransformAnim">
                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.075" To="1" Storyboard.TargetName="thumb" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="thumb" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                        </Grid.RowDefinitions>
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ThemedThumb}" RenderTransformOrigin="0.5,0.5" x:Name="thumb">
                                    <Thumb.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource TransformAnim}" x:Name="TransformAnim_BeginStoryboardThumb" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource RestoreTransformAnim}" x:Name="RestoreTransformAnim_BeginStoryboardThumb" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ADXCheckBox -->
    <Style TargetType="{x:Type local:ADXCheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="20" />
        <Setter Property="BulletColor" Value="#026873" />
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ADXCheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DoIndeterminate">
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="10" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="10" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="10" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="10" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="DoCheck">
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y1)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="15">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y1)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y2)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250"  Value="5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y2)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="15">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="15" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.X1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="15" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.X1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="5" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.X2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="5" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.X2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="DoUncheck">
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y1)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="15">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y1)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.Y2)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250"  Value="5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Duration="00:00:00.250" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.Y2)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.175" Value="10">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="00:00:00.250" Value="15">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <QuadraticEase EasingMode="EaseInOut" />
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="15" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.X1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="15" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.X1)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" BeginTime="00:00:00" To="5" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(Line.X2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.250" To="5" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(Line.X2)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="xline1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Duration="00:00:00.075" To="1" BeginTime="00:00:00" Storyboard.TargetName="xline2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Canvas Width="20" Height="20">
                                <Line x:Name="line1" X2="20" Y1="0.5" Y2="0.5" Stroke="#999" />
                                <Line x:Name="line2" X2="19.5" Y1="0" Stroke="#999" X1="19.5" Y2="20" />
                                <Line x:Name="line3" Y1="19.5" Y2="19.5" X2="20" Stroke="#999" />
                                <Line x:Name="line4" Y1="0" Y2="20" X2="0.5" Stroke="#999" X1="0.5" />
                                <Line x:Name="xline1" Opacity="0" Y1="10" Y2="10" X2="10" X1="10" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="{TemplateBinding BulletColor}" StrokeThickness="3" />
                                <Line x:Name="xline2" Opacity="0" Y1="10" Y2="10" X2="10" X1="10" StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="{TemplateBinding BulletColor}" StrokeThickness="3" />
                            </Canvas>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="8,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DoIndeterminate}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">

                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DoCheck}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!--<Setter TargetName="MainBorder" Property="Background" Value="#81d2eb" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
